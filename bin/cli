#!/usr/bin/env node

'use strict';

const program = require('commander');
const co = require('co');
const pkg = require('../package.json');
const chalk = require('chalk');
const fmt = require('util').format;
const config = require('../config');
const updator = require('../lib/updator');

updator.update(function(err, result) {
  if (!err) {
    if (result.isOutdated) {
      console.log(fmt('%s tinyjs-cli 最新版本是 %s，本地版本是 %s，建议使用最新版本', chalk.yellow('[警告]'), chalk.green.bold(result.latest), chalk.yellow(result.current)));
      console.log(fmt('%s 你可以执行 %s 来安装此版本', chalk.yellow('[警告]'), chalk.green.bold(`npm install -g tinyjs-cli@${result.latest}`)));
    }
  }

  program
    .version(pkg.version)
    .usage('<command> [options]'.green);

  config.commands.forEach((opt) => {
    const cmd = program
      .command(opt.name, '', { noHelp: opt.noHelp })
      .description(chalk.yellow(opt.description));

    (opt.options || []).forEach((o) => {
      cmd.option(o.name, o.description, o.defaultValue);
    });

    cmd.action(() => {
      doCommand(Array.prototype.slice.call(process.argv, 2), cmd);
    });
  });

  if (!process.argv.slice(2).length) {
    program.help();
  }

  program.parse(process.argv);
});

function doCommand(argv, cmd) {
  const com = argv[0];

  co(function *() {
    yield require(`../lib/${com}`)(argv.slice(1), cmd);
  }).catch(function(e) {
    console.log(e.stack);
    console.log('\n');
  });
}
